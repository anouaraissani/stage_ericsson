Complexe variables: list, tuple, dictionaries



dictionnaire: un tableau complexe


=>Type of sequences in Python:
*Lists
*Tuples
*Strings
*Sets
*Dictionaries


=>Sequence operations
*Concatination
*Repitition
*Membership testing
*Slicing
*Indexing


=>Delete functions
pop: delete with index, pop(3)
remove: delete by value (first value), remove('a')
del: delete with range, del(0:3)


=>Lists functions:
*append: add one element in the end
*exend: add many elements in the end 
*insert(index, value), inset a value in a specifix position in the list
*sorted: sort a list
*remove("_"): remove an elemnt by its value
*L[::-1]: reverse a list L

dir('variable name'): lit all the functions used o the variable, dir(list)
help: more detailed: defines each function how it works



==>tuple:
* it is used for constant variables
* it is faster than a list 

=> Operations
length
repetition
tuple[::-1] inverser un tuple
*append
*insert
*delete
*replace


==> immutable data types
* int 
* float
* complexe variables
* string

==> mutable data types
* lists
* dictionaries
* sets


==> (Bitwist operation) Binary
a & b and
a / b or
a ^ b xor
~ a not
a << b left shift
a >> b right shift

==Identity
* is
* is not

==> membership
* in 
* not in

==> condition
* if
* elif
* else

==> for 
for i in range ( 10, 20, 2)
* if it is a data frame:  - for i in range(len(data))
                          - for i in range(data.index)



==>control statements:
break
continue
pass

________________________________________________________________________________________
________________________________________________________________________________________

**FILES

==>open a file
file_object = open(file_name, [access_mode])

=> access mode:
*r: read only
*r+: read and write
*w: write only
*a: for appending ( a file is already full and add info to it)
*a+: a + reading
*w+: read and write

=> close a file
file.close()

=> W write in a file
fileObject.Write(string)

=> read
fileObject.read(): read one line
fileObject.readline(): read all lines n put them in a list

=> rename a file
os.rename(current_file_name, new_file_name)

=> remove a file
os.remove(file_name)

file.mode: 
fie.closed: verifier 
file.tell()
file.seek

________________________________________________________________________________________
________________________________________________________________________________________

** POO

==> functions
def functionname(inputs):

if there is outputs: return a, b ...

==>type of function arguments
keyword arguments
default arguments: a = 10 
variable lengh : def functionname(self, *args): nbr infini de args
1 3 5 7 9
